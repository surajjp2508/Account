* @ValidationCode : MjotMTkyNDIwNTU0MDpDcDEyNTI6MTU5ODUxNTAwNjMyOTpNYWdpOi0xOi0xOjA6MDpmYWxzZTpOL0E6UjE5X1NQMjUuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 27 Aug 2020 10:56:46
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : Magi
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R19_SP25.0
$PACKAGE Cu.Account
*===============================================================================
SUBROUTINE CU.B.DRAW.BULK.PAY.SUSP( sId )
*===============================================================================
* Company Name    : CUP
* Developed By    : Magdalena Pavlova
* Arguments In    : CU.PRIZE.DRAW Id
* Arguments Out   : n\a
* Attached To     : n\a
* Attached As     : n\a
*-----------------------------------------------------------------------------
* Description     : CU.B.DRAW.BULK.PAY service routine
*-----------------------------------------------------------------------------
* Modification History:
*------------------------
* Date              Who                Reference                 Description
*-----------------------------------------------------------------------------
* 22-07-2020        Magdalena Pavlova                            Initial Version
*===============================================================================

    $USING EB.SystemTables
    $USING EB.ErrorProcessing
    $USING EB.DataAccess
    $USING EB.Service
    $USING EB.Utility
    $USING AC.AccountOpening
    $USING FT.Contract
    $USING EB.Foundation
    $USING EB.Interface
    
    
    GOSUB Initialise
    GOSUB Process

RETURN

Initialise:
*-------------------------------------------------------------------------------
   
    sFtAmt = ''
    rContraAccTransfer = ''
    errContraAccTransfer   = ''
    
    EB.DataAccess.FRead(Cu.Account.getfnContraAccTransfer() ,sId, rContraAccTransfer, Cu.Account.getfvContraAccTransfer(),errContraAccTransfer)
    sNoFt = DCOUNT(rContraAccTransfer, @FM)
*Avoid using FOR...NEXT loops. use the more efficient LOOP...REMOVE syntax.
	LOOP
    iCount = 1
	WHILE iCount LE sNoFt
	*FOR iCount = 1 TO sNoFt
        sFtAmt = FIELD( rContraAccTransfer<iCount>, '-', 2)
        sFtAmount += sFtAmt
    *NEXT
	REPEAT

RETURN

Process:
*-------------------------------------------------------------------------------

    sAppication = 'FUNDS.TRANSFER'
    sFunction   = 'I'
    sProcess    = 'PROCESS'
    sVersion    = 'FUNDS.TRANSFER,DRAW.OFS'
    sGtsMode    = ''
    sNoOfAuth   = '0'
    sFtId       = ''
    sOfsSource  = 'FT.DRAW.S'
    rFtRecord<FT.Contract.FundsTransfer.TransactionType> = Cu.Account.getsPayTypeS()
    rFtRecord<FT.Contract.FundsTransfer.DebitAcctNo> = Cu.Account.getsIntAccountS()
    rFtRecord<FT.Contract.FundsTransfer.DebitCurrency> = EB.SystemTables.getLccy()
    rFtRecord<FT.Contract.FundsTransfer.DebitAmount> = sFtAmount
    rFtRecord<FT.Contract.FundsTransfer.CreditAcctNo> = Cu.Account.getsSuspAccountS()
    rFtRecord<FT.Contract.FundsTransfer.OrderingCust> = Cu.Account.getsOrdCustS()
    
    rOfsRecord = ''

    EB.Foundation.OfsBuildRecord(sAppication, sFunction, sProcess, sVersion, sGtsMode, sNoOfAuth, sFtId, rFtRecord, rOfsRecord)
    EB.Interface.OfsPostMessage(rOfsRecord, '', sOfsSource, '')

RETURN

END

